@page "/doctor"

<MudItem Class="d-flex justify-center mt-3">
    <MudPaper Elevation="25" Class="pa-8 mb-6" Style="width: 400px;">
        <MudText>Wellcome !!! Dr @_currentUser.FullName</MudText>
    </MudPaper>
</MudItem>
<MudItem Class="d-flex gap-2">
    <MudContainer MaxWidth="MaxWidth.Small" Class="d-flex align-center">
        <MudPaper Elevation="25" Class="pa-8" Style="width: 400px;">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6" Align="Align.Center">Total Earnings</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText Align="Align.Center" Color="Color.Tertiary">@DoctorProfile.TotalEarnings</MudText>
                </MudCardContent>
            </MudCard>
        </MudPaper>
    </MudContainer>
    <MudContainer MaxWidth="MaxWidth.Small" Class="d-flex align-center">
        <MudPaper Elevation="25" Class="pa-8" Style="width: 400px;">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6" Align="Align.Center">Today's Appointment</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText Align="Align.Center" Color="Color.Tertiary">@number patients</MudText>
                </MudCardContent>
            </MudCard>
        </MudPaper>
    </MudContainer>
</MudItem>

@code {
    public List<AppointmentModel> Appointments { get; set; } = new();
    public DoctorViewModel DoctorProfile { get; set; } = new();
    public int number { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Appointments = await _httpService.Get<List<AppointmentModel>>($"/api/Doctor/appointment/{_currentUser.UserId}");
            DoctorProfile = await _httpService.Get<DoctorViewModel>($"/api/Doctor/{_currentUser.UserId}");
            number = Appointments.Where(x => x.AppointDate.Value.Date == DateTime.Today.Date).Count();
        }
        catch
        {
            Appointments = new List<AppointmentModel>();
        }
    }
}
